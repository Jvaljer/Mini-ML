type token =
    TYPE
  | TUNIT
  | TINT
  | THEN
  | TBOOL
  | SEMI
  | RPAR
  | REC
  | RBRACE
  | RARROW
  | PLUS
  | PARS
  | OR
  | NOT
  | NEQ
  | NEG
  | MUTABLE
  | MUL
  | MOD
  | MINUS
  | LT
  | LPAR
  | LET
  | LE
  | LBRACE
  | LARROW
  | IN
  | IF
  | IDENT of string
  | FUN
  | EQ
  | EOF
  | ELSE
  | DOT
  | DIV
  | CST of int
  | COLON
  | BOOL of bool
  | ASS
  | AND
val menhir_begin_marker : int
val xv_unop : Mml.uop
val xv_type_def_arg : string * Mml.typ * unit option
val xv_type_def : string * (string * Mml.typ * unit option) list
val xv_typ : Mml.typ
val xv_s_expr : Mml.expr
val xv_program : Mml.prog
val xv_option_MUTABLE_ : unit option
val xv_nonempty_list_type_def_arg_ : (string * Mml.typ * unit option) list
val xv_nonempty_list_id_def_ : (string * Mml.expr) list
val xv_list_type_def_ : (string * (string * Mml.typ * unit option) list) list
val xv_list_fun_arg_ : (string * Mml.typ) list
val xv_id_def : string * Mml.expr
val xv_fun_arg : string * Mml.typ
val xv_expr : Mml.expr
val xv_binop : Mml.bop
val menhir_end_marker : int
